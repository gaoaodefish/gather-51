C51 COMPILER V9.59.0.0   KEYMATRIX                                                         12/20/2024 14:56:49 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE KEYMATRIX
OBJECT MODULE PLACED IN .\Objects\KeyMatrix.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE Hardware\KeyMatrix.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Hardware) DEBUG O
                    -BJECTEXTEND PRINT(.\Listings\KeyMatrix.lst) OBJECT(.\Objects\KeyMatrix.obj)

line level    source

   1          #include "Boot.H"
   2          
   3          //行扫描方式
   4          u8 key_matrix_ranks_scan()
   5          {
   6   1              u8 key_value = 0;
   7   1              KEY_MATRIX_PORT = 0xf7;         //第一列为低电平
   8   1              if(KEY_MATRIX_PORT != 0xf7)
   9   1              {
  10   2                      delay(1000);
  11   2                      switch(KEY_MATRIX_PORT)
  12   2                      {
  13   3                              case 0x77: key_value =1; break;
  14   3                              case 0xb7: key_value =5; break;
  15   3                              case 0xd7: key_value =9; break;
  16   3                              case 0xe7: key_value =13; break;
  17   3                      }
  18   2              }
  19   1              while(KEY_MATRIX_PORT != 0xf7);         //等待按键松开
  20   1              
  21   1              KEY_MATRIX_PORT = 0xfb;         //第二列为低电平
  22   1              if(KEY_MATRIX_PORT != 0xfb)
  23   1              {
  24   2                      delay(1000);
  25   2                      switch(KEY_MATRIX_PORT)
  26   2                      {
  27   3                              case 0x7b: key_value =2; break;
  28   3                              case 0xbb: key_value =6; break;
  29   3                              case 0xdb: key_value =10; break;
  30   3                              case 0xeb: key_value =14; break;
  31   3                      }
  32   2              }
  33   1              while(KEY_MATRIX_PORT != 0xfb);         //等待按键松开
  34   1              
  35   1              KEY_MATRIX_PORT = 0xfd;         //第三列为低电平
  36   1              if(KEY_MATRIX_PORT != 0xfd)
  37   1              {
  38   2                      delay(1000);
  39   2                      switch(KEY_MATRIX_PORT)
  40   2                      {
  41   3                              case 0x7d: key_value =3; break;
  42   3                              case 0xbd: key_value =7; break;
  43   3                              case 0xdd: key_value =11; break;
  44   3                              case 0xed: key_value =15; break;
  45   3                      }
  46   2              }
  47   1              while(KEY_MATRIX_PORT != 0xfd);         //等待按键松开
  48   1              
  49   1              KEY_MATRIX_PORT = 0xfe;         //第四列为低电平
  50   1              if(KEY_MATRIX_PORT != 0xfe)
  51   1              {
  52   2                      delay(1000);
  53   2                      switch(KEY_MATRIX_PORT)
  54   2                      {
C51 COMPILER V9.59.0.0   KEYMATRIX                                                         12/20/2024 14:56:49 PAGE 2   

  55   3                              case 0x7e: key_value =4; break;
  56   3                              case 0xbe: key_value =8; break;
  57   3                              case 0xde: key_value =12; break;
  58   3                              case 0xee: key_value =16; break;
  59   3                      }
  60   2              }
  61   1              while(KEY_MATRIX_PORT != 0xfe);         //等待按键松开
  62   1              
  63   1              return key_value;
  64   1      }
  65          
  66          //线反转扫描方式
  67          u8 key_matrix_flip_scan(void)
  68          {
  69   1              u8 key_value = 0;
  70   1              //判断那一列按下
  71   1              KEY_MATRIX_PORT = 0x0f;
  72   1              if(KEY_MATRIX_PORT != 0x0f)
  73   1              {
  74   2                      delay(1000);
  75   2                      if(KEY_MATRIX_PORT != 0x0f)
  76   2                      {
  77   3                              switch(KEY_MATRIX_PORT)
  78   3                              {
  79   4                                      case 0x07: key_value = 1; break;        //第一列按下
  80   4                                      case 0x0b: key_value = 2; break;        //第二列按下
  81   4                                      case 0x0d: key_value = 3; break;        //第三列按下
  82   4                                      case 0x0e: key_value = 4; break;        //第四列按下
  83   4                              }
  84   3                              //判断哪一行按下
  85   3                              KEY_MATRIX_PORT = 0xf0;
  86   3                              switch(KEY_MATRIX_PORT)
  87   3                              {
  88   4                                      case 0x70: key_value += 0; break;       //第一行按下
  89   4                                      case 0xb0: key_value += 4; break;       //第二行按下
  90   4                                      case 0xd0: key_value += 8; break;       //第三行按下
  91   4                                      case 0xe0: key_value += 12; break;      //第四行按下
  92   4                              }
  93   3                              while(KEY_MATRIX_PORT != 0xf0);
  94   3                      }
  95   2              }
  96   1              
  97   1              return key_value;
  98   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    359    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
